#!/bin/bash
function setupDependencies() {
    echo "$(date) updating apt repository and installing packages";
    apt update && apt install gcc gcc-multilib mingw-w64 git net-tools zip gzip python3 nasm gdb net-tools -y;

    echo "$(date) setting up gdb peda";
    git clone https://github.com/longld/peda.git ~/peda
    echo "source ~/peda/peda.py" >> ~/.gdbinit

    echo "$(date) setting up boofuzz and ROPgadget";
    test -f $(which python)||ln -s $(which python3) /usr/sbin/python
    python -m pip install boofuzz ROPgadget;
    return 0;
}

function downloadFiles() {
    echo "$(date) downloading files";
    test -d /opt/lab || mkdir -p /opt/lab;
    declare -a _files=(
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/fuzzing/fuzz-server.py"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/linux/exploit-code/linux-exploit.py"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/linux/exploit-code/x86-reverse-tcp.asm"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/linux/service/lin-server"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/linux/service/setup.sh"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/windows/exploit-code/reverse-tcp.ps1"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/windows/exploit-code/windows-exploit.py"
         "https://github.com/wshepherd0010/exploit-development-lab/raw/master/supporting_files/windows/exploit-code/x86-winexec.asm"
    );
    for _file in ${_files[@]}; do
      curl -A "PSLabs" -o "/opt/lab/$(basename ${_file})" -skL ${_file};
    done;
    return 0;
}

function setupService() {
    echo "$(date) setting up vulnerable service";
    test -f /opt/lab/lin-server||return 1;
    chmod +x /opt/lab/lin-server
    cat << EOF > /etc/systemd/system/lin-server.service
[Unit]
Description=Vulnerable Linux Server
After=network.target auditd.service sshd.service

[Service]
ExecStart=/opt/lab/lin-server
ExecReload=/opt/lab/lin-server
KillMode=process
Restart=always
RestartSec=3
[Install]
WantedBy=multi-user.target
Alias=vuln.service
EOF
  systemctl enable lin-server
  systemctl daemon-reload
  systemctl start lin-server
  return 0;
}

function removeService() {
    echo "$(date) removing vuln service";
    systemctl stop lin-server
    systemctl disable lin-server
    rm /etc/systemd/system/lin-server.service
    # rm -rf /opt/lab
    return 0;
}

function setupLearner() {
  echo "$(date) setting up learner environment";
  chmod +x /opt/lab/*
  for _file in /opt/lab/*.py; do
    ln -s "${_file}" /usr/sbin/$(basename "${_file}");
  done;
  for _file in /opt/lab/*.ps1; do
    ln -s "${_file}" /tmp/$(basename "${_file}");
  done;
  return 0;
}

function setupLab() {
    echo "$(date) setting up testing environment";
    test -f /tmp/.setup-complete && (echo "$(date) already setup environment" && exit 0);
    setupDependencies || (echo "$(date) failed setupDependencies" && exit 1);
    downloadFiles || (echo "$(date) failed downloadFiles" && exit 1);
    setupService || (echo "$(date) failed setupService" && exit 1);
    setupLearner || (echo "$(date) failed setupLearner" && exit 1);
    touch /tmp/.setup-complete;
    return 0
}
setupLab;